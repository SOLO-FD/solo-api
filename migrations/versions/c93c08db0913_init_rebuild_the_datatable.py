"""Init: Rebuild the datatable

Revision ID: c93c08db0913
Revises:
Create Date: 2025-05-08 20:53:35.894561

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c93c08db0913"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("header_url", sa.Text(), nullable=True),
        sa.Column("cover_url", sa.Text(), nullable=True),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("owner_id", sa.String(length=13), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.String(length=13), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_project")),
    )
    op.create_index(
        op.f("ix_project_created_at"), "project", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_project_end_date"), "project", ["end_date"], unique=False)
    op.create_index(op.f("ix_project_name"), "project", ["name"], unique=False)
    op.create_index(op.f("ix_project_owner_id"), "project", ["owner_id"], unique=False)
    op.create_index(
        op.f("ix_project_start_date"), "project", ["start_date"], unique=False
    )
    op.create_index(
        op.f("ix_project_updated_at"), "project", ["updated_at"], unique=False
    )
    op.create_table(
        "tag",
        sa.Column("color", sa.String(length=7), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("owner_id", sa.String(length=13), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.String(length=13), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tag")),
    )
    op.create_index(op.f("ix_tag_created_at"), "tag", ["created_at"], unique=False)
    op.create_index(op.f("ix_tag_name"), "tag", ["name"], unique=False)
    op.create_index(op.f("ix_tag_owner_id"), "tag", ["owner_id"], unique=False)
    op.create_index(op.f("ix_tag_updated_at"), "tag", ["updated_at"], unique=False)
    op.create_table(
        "attachment",
        sa.Column("filename", sa.String(length=128), nullable=False),
        sa.Column("file_type", sa.String(length=10), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("size", sa.BigInteger(), nullable=False),
        sa.Column("checksum", sa.String(length=64), nullable=False),
        sa.Column("project_id", sa.String(length=13), nullable=False),
        sa.Column("id", sa.String(length=13), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
            name=op.f("fk_attachment_project_id_project"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_attachment")),
        sa.UniqueConstraint("checksum", name=op.f("uq_attachment_checksum")),
    )
    op.create_index(
        op.f("ix_attachment_created_at"), "attachment", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_attachment_file_type"), "attachment", ["file_type"], unique=False
    )
    op.create_index(
        op.f("ix_attachment_filename"), "attachment", ["filename"], unique=False
    )
    op.create_table(
        "project_tag_association",
        sa.Column("project_id", sa.String(length=13), nullable=False),
        sa.Column("tag_id", sa.String(length=13), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
            name=op.f("fk_project_tag_association_project_id_project"),
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_project_tag_association_tag_id_tag")
        ),
        sa.PrimaryKeyConstraint(
            "project_id", "tag_id", name=op.f("pk_project_tag_association")
        ),
    )
    op.create_index(
        op.f("ix_project_tag_association_created_at"),
        "project_tag_association",
        ["created_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_project_tag_association_created_at"),
        table_name="project_tag_association",
    )
    op.drop_table("project_tag_association")
    op.drop_index(op.f("ix_attachment_filename"), table_name="attachment")
    op.drop_index(op.f("ix_attachment_file_type"), table_name="attachment")
    op.drop_index(op.f("ix_attachment_created_at"), table_name="attachment")
    op.drop_table("attachment")
    op.drop_index(op.f("ix_tag_updated_at"), table_name="tag")
    op.drop_index(op.f("ix_tag_owner_id"), table_name="tag")
    op.drop_index(op.f("ix_tag_name"), table_name="tag")
    op.drop_index(op.f("ix_tag_created_at"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_project_updated_at"), table_name="project")
    op.drop_index(op.f("ix_project_start_date"), table_name="project")
    op.drop_index(op.f("ix_project_owner_id"), table_name="project")
    op.drop_index(op.f("ix_project_name"), table_name="project")
    op.drop_index(op.f("ix_project_end_date"), table_name="project")
    op.drop_index(op.f("ix_project_created_at"), table_name="project")
    op.drop_table("project")
    # ### end Alembic commands ###
